# NO MICROSOFT_UPSTREAM: Add "downloader" stage to make the Dockerfile work with .NET Docker infra.
#
# Docker doesn't support ARGs in "COPY --from", so we use ARGs to define a stage that "--from" can
# reference later. We don't do anything at all in this stage: we're just creating it to declare a
# stage name that we can reference later.
# * https://github.com/docker/for-mac/issues/2155
# * https://github.com/moby/moby/issues/34482
ARG REPO=mcr.microsoft.com/oss/go/microsoft/alpha/golang
# It's easy to download Go and install it in server core, but not nanoserver. So, to build
# nanoserver, copy over the server core installation.
ARG DOWNLOADER_TAG={{ .version }}-windowsservercore-{{ env.windowsRelease }}
FROM $REPO:$DOWNLOADER_TAG AS downloader
# END NO MICROSOFT_UPSTREAM

FROM mcr.microsoft.com/windows/{{ env.windowsVariant }}:{{ env.windowsRelease }}

SHELL ["cmd", "/S", "/C"]

# no Git installed (intentionally)
#  -- Nano Server is "Windows Slim"

{{
	def install_directory:
		if [ "1.15", "1.16" ] | index(env.version) then
			"C:\\go"
		else
			"C:\\Program Files\\Go"
		end
-}}
{{ if install_directory == "C:\\go" then ( -}}
# ideally, this would be C:\go to match Linux a bit closer, but C:\go was the default install path for Go itself on Windows
ENV GOPATH C:\\gopath
# (https://golang.org/cl/283600)
{{ ) else ( -}}
# for 1.17+, we'll follow the (new) Go upstream default for install (https://golang.org/cl/283600), which frees up C:\go to be the default GOPATH and thus match the Linux images more closely (https://github.com/docker-library/golang/issues/288)
ENV GOPATH C:\\go
# HOWEVER, please note that it is the Go upstream intention to remove GOPATH support entirely: https://blog.golang.org/go116-module-changes
{{ ) end -}}

# PATH isn't actually set in the Docker image, so we have to set it from within the container
USER ContainerAdministrator
RUN setx /m PATH "%GOPATH%\bin;{{ install_directory }}\bin;%PATH%"
USER ContainerUser
# doing this first to share cache across versions more aggressively

ENV GOLANG_VERSION {{ .version }}

# Docker's Windows path parsing is absolutely *cursed*; please just trust me on this one -Tianon
# NO MICROSOFT_UPSTREAM: Use "downloader" stage defined earlier.
COPY --from=downloader {{
# END NO MICROSOFT_UPSTREAM
	install_directory
	| gsub("\\\\"; "\\\\")
	| [ . , . ]
	| @json
}}
RUN go version

WORKDIR $GOPATH
