From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: microsoft-golang-bot <microsoft-golang-bot@users.noreply.github.com>
Date: Fri, 11 Feb 2022 18:07:18 -0600
Subject: [PATCH] Add Mariner support with FIPS dependency flag

---
 Dockerfile-linux.template | 59 +++++++++++++++++++++++++++++++++++++++
 1 file changed, 59 insertions(+)

diff --git a/Dockerfile-linux.template b/Dockerfile-linux.template
index 3d8ddc4235a658..0bc708016e8b10 100644
--- a/Dockerfile-linux.template
+++ b/Dockerfile-linux.template
@@ -4,11 +4,47 @@
 	;
 	def alpine_version:
 		env.variant | ltrimstr("alpine")
+	;
+	def is_cbl_mariner:
+		env.variant | startswith("cbl-mariner")
+	;
+	def cbl_mariner_version:
+		env.variant | ltrimstr("cbl-mariner")
+	;
+
+	def is_fips:
+		(.branchSuffix // "") | contains("fips")
 -}}
 {{ if is_alpine then ( -}}
 FROM alpine:{{ alpine_version }}
 
 RUN apk add --no-cache ca-certificates
+{{ ) elif is_cbl_mariner then ( -}}
+FROM mcr.microsoft.com/cbl-mariner/base/core:{{ cbl_mariner_version }}
+
+RUN tdnf install -y \
+		binutils \
+		gcc \
+		glibc \
+		glibc-devel \
+		iana-etc \
+		kernel-headers \
+		tar \
+		wget \
+		# To reduce image size, CBL-Mariner image doesn't include full ca-certificates: https://github.com/microsoft/CBL-Mariner/issues/3563
+		# Full certs are expected in a builder-style image (e.g. to fetch dependencies), so install them.
+		ca-certificates \
+{{
+	if is_fips then (
+-}}
+		# Install OpenSSL for headers when building a FIPS-compatible app with Go.
+		openssl-devel \
+{{
+	) else "" end
+-}}
+	; \
+	tdnf clean all
+
 {{ ) else ( -}}
 FROM buildpack-deps:{{ env.variant }}-scm
 
@@ -21,6 +57,14 @@ RUN set -eux; \
 		libc6-dev \
 		make \
 		pkg-config \
+{{
+	if is_fips then (
+-}}
+		# Install OpenSSL for headers when building a FIPS-compatible app with Go.
+		libssl-dev \
+{{
+	) else "" end
+-}}
 	; \
 	rm -rf /var/lib/apt/lists/*
 {{ ) end -}}
@@ -41,6 +85,13 @@ ENV GOLANG_VERSION {{ .version }}
 				ppc64le: "ppc64le",
 				s390x: "s390x",
 			}
+		elif is_cbl_mariner then
+			{
+				amd64: "x86_64",
+				arm32v6: "armhf",
+				arm32v7: "armv7",
+				arm64v8: "aarch64",
+			}
 		else
 			{
 				amd64: "amd64",
@@ -58,6 +109,8 @@ RUN set -eux; \
 {{ if is_alpine then ( -}}
 	apk add --no-cache --virtual .fetch-deps gnupg; \
 	arch="$(apk --print-arch)"; \
+{{ ) elif is_cbl_mariner then ( -}}
+	arch="$(uname -m)"; \
 {{ ) else ( -}}
 	arch="$(dpkg --print-architecture)"; arch="${arch##*-}"; \
 {{ ) end -}}
@@ -112,10 +165,16 @@ RUN set -eux; \
 	GNUPGHOME="$(mktemp -d)"; export GNUPGHOME; \
 	wget -O microsoft-managed-lang-compiler.asc 'https://download.microsoft.com/download/f/a/2/fa2420dd-3f08-4621-82cf-5a22abcbc8f9/microsoft-managed-lang-compiler.asc'; \
 	gpg --batch --import microsoft-managed-lang-compiler.asc; \
+{{ if is_cbl_mariner then ( -}}
+# Mariner 2.0 doesn't include dirmngr, which is required for keyserver import. Skipping keyserver
+# import. In microsoft/go-images, we use a manually imported key anyway.
+# See https://github.com/microsoft/CBL-Mariner/issues/3142
+{{ ) else ( -}}
 # https://www.google.com/linuxrepositories/
 	gpg --batch --keyserver keyserver.ubuntu.com --recv-keys 'EB4C 1BFD 4F04 2F6D DDCC  EC91 7721 F63B D38B 4796'; \
 # let's also fetch the specific subkey of that key explicitly that we expect "go.tgz.asc" to be signed by, just to make sure we definitely have it
 	gpg --batch --keyserver keyserver.ubuntu.com --recv-keys '2F52 8D36 D67B 69ED F998  D857 78BD 6547 3CB3 BD13'; \
+{{ ) end -}}
 	gpg --batch --verify go.tgz.asc go.tgz; \
 	gpgconf --kill all; \
 	rm -rf "$GNUPGHOME" go.tgz.asc; \
